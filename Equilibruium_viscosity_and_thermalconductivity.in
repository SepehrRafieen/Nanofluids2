echo both 

package omp 2 
suffix omp 

log ./viscousity_thermalconductivity.txt 

units metal 
dimension 3 
boundary p p p 

#-----------find viscousity----------- 
variable T equal 300 
variable V equal vol     #imidiate evaluation of variable  #variable v0 equal $v
variable dt equal default
variable s equal default 
variable p equal default 
variable d equal $p*$s 
variable kB equal 1.3806504e-23     #Green-Kubo formula

#-----------convert Dimensions from metal to ISI units
variable A2m equal 1.0e-10 
variable fs2s equal 1.0e-15 
variable atm2pa equal 101325.0 
variable convert_v equal ${atm2pa}*${atm2pa}*${fs2s}*${A2m}*${A2m}*${A2m}  #viscosity_converter

#-------atom_style--------
atom_style  charge     
read_data   Alumina_charge.data 

pair_style reax/c NULL 
pair_coeff * * ffield.reax.default  default 
fix reax all qeq/reax 1 0.0 1e-6 reax/c 

timestep ${dt} 
thermo 10000 

neighbor 2 bin 
neigh_modify every 10 delay 0 check no 

min_style cg 
minimize  1e-8 1e-8 300 300 


velocity all create $T 102486 dist gaussian units box 

fix NVT all nvt temp $T $T 10      # Equilibrium for the system

run default 

write_restart restart.eqnvt 


reset_timestep 0     #After the system reached equilibrium
unfix NVT 
fix NVE all nve 

variable  pxy equal pxy      #find stress by imidiate evaluation of variable in LAMMPS
variable  pxz equal pxz
variable  pyz equal pyz

fix SS all ave/correlate $S $p $d  v_pxy v_pxz v_pyz type auto file SOSt.dat ave running 

variable scale_v equal ${convert_v}/(${kB}*$T*$V*$s*${dt})

variable v11 equal trap(f_SS[3])*${scale_v}     # sum(x) & integrate by trapezium rule 
variable v22 equal trap(f_SS[4])*${scale_v}     # sum(y)
variable v33 equal trap(f_SS[5])*${scale_v}     # sum(z)

variable v equal (v_v11+v_v22+v_v33)/3.0 

thermo $d 
thermo_style custom step temp etotal press v_v11 v_v22 v_v33 v_v  
run default #Finally, viscosity must flactuate to a specific number to assess the number of iterations

####################################################################  
#find thermal_conductivity 

variable kB equal 1.3806504e-23 
variable A2m equal 1.0e-10 
variable fs2s equal 1.0e-15 
variable kCal2J equal 4186.0/${NA}  
variable convet_k equal ${kCal2J}*${kCal2J}/${fs2s}/${A2m} 

fix NVE all nve 
##################
compute myKE all ke/atom 
compute myPE all pe/atom 
compute myStress all stress/atom NULL virial 
compute flux all heat/flux myKE myPE myStress 

variable Jx equal c_flux[1]/vol 
variable Jx equal c_flux[2]/vol 
variable Jx equal c_flux[3]/vol

fix JJ all ave/correlate $s $p $d & 
c_flux[1] c_flux[2] c_flux[3] & 
type auto file JOJt.dat ave running 

variable scale_k equal ${convert_k}/${kB}/$T/$T/$V*$s*${dt} 
variable k11 equal trap (f_JJ[3])*${scale_k} 
variable k22 equal trap (f_JJ[4])*${scale_k} 
variable k33 equal trap (f_JJ[5])*${scale_k} 
variable k equal (v_k11+v_k22+v_k33)/3.0 

run default #Finally, thermal-conductivity must flactuate to a specific number to assess the number #of iterations 
